%FigS4D.m

function FigS4D(subj_figs,summary_data_path,nwb)
    clearvars -except subj_session_id summary_data_path subj_figs primary_experiments_table subj nwb output_path
    if contains(subj_figs,' S4d')
    
        table = readtable(strcat(summary_data_path,'\IndividualFigures\FigS4\D\DKLab_JDRLXJ_flux_vs_radius_fit_slope_vsD_invVAR_ReaChRfit_med_stat.csv'));
        
        beta = table.q2r_k;
        beta_invVAR = table.q2r_invVAR;
        avg_diam = 2*table.avg_radius_um;
        is_pia = table.is_pia;
    
        pia_beta = beta(is_pia);
        pia_beta_invVAR = beta_invVAR(is_pia);
        pia_Diam = avg_diam(is_pia);
    
        %Assign to dynamic table: Pia
        col1 = types.hdmf_common.VectorData( ...
            'description', 'Pia Beta', ...
            'data', pia_beta);
        col1_len = length(col1.data);
        col2 = types.hdmf_common.VectorData( ...
            'description', 'Pia Beta Inverse Variance', ...
            'data', pia_beta_invVAR);
        col3 = types.hdmf_common.VectorData( ...
            'description', 'Pia Average Diameter (um)', ...
            'data', pia_Diam);
        table_S4D_Pia = types.hdmf_common.DynamicTable( ...
            'description', 'analysis table', ...
            'Pia Beta', col1, ...
            'Pia Beta Inverse Variance', col2, ...
            'Pia Average Diameter',col3,...
            'id', types.hdmf_common.ElementIdentifiers('data', linspace(1,col1_len,col1_len)) ...
            );
        nwb.analysis.set('PiaFluxDiameterModulationReaChRS4D', table_S4D_Pia);
    end
end